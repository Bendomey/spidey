scalar Time

type Account {
  id: String!
  name: String!
}

type Product {
  id: String!
  name: String!
  description: String!
  price: Float!
}

type Order {
  id: String!
  createdAt: Time!
  totalPrice: Float
  account: Account
  products(skip: Int, take: Int): [Product!]!
}

type Query {
  accounts(skip: Int, take: Int, id: String): [Account!]!
  products(skip: Int, take: Int, id: String): [Product!]!
}

type Mutation {
  createAccount(name: String!): Account
  createProduct(name: String!, description: String!, price: Float!): Product
}
